package com.sinapps.task08;

import java.util.Calendar;
import java.util.Random;

public class Cars {
    private final String[] BRANDS = {"Audi", "BMW"};
    private final String[][] MODELS = {{"A4", "A5", "A6", "S5", "A8", "A3", "A4 Avant", "А5 Sportback", "A7 Sportback", "A6 allroad quattro", "S5", "RS 6 Avant", "А3 Sportback", "Q3", "Q3 Sportback", "Q5", "Q7", "SQ5", "Q8", "E-tron", "SQ8"},
                                       {"7-Series", "2-Series", "3-Series", "4-Series", "5-Series", "M2", "8 Gran Coupe", "8-Series", "M5", "i8", "M8", "3-Series Gran Turismo", "4-Series Gran Coupe", "i3", "6-Series Gran Turismo", "1-Series", "X2", "X1", "X3", "X4", "X5", "X6", "X7"}};
    private final String[] COLORS = {
            "Серебристо-светло оранжевый",
            "Серебристо-чёрный",
            "Белая двухслойная",
            "Ярко-жёлтый",
            "Серебристый сине-зелёный",
            "Серебристо-коричневый",
            "Оливково-зелёный",
            "Серебристый",
            "Белый металлик",
            "Серебристый светло-серый",
            "Ярко-зелёный",
            "Серебристый фиолетовый",
            "Серебристо-тёмно-зелёный",
            "Голубой",
            "Тёмно-вишнёвый",
            "Серебристо-бежевый",
            "Серебристый оранжевый",
            "Серебристо-зелёный",
            "Тёмно-сине-зелёный",
            "Светло-синий",
            "Светло-серый",
            "Серебристо-зелёно-голубой",
            "Бежевый",
            "Серо-чёрный",
            "Тёмно-фиолетовый",
            "Тёмно-сине-зелёный",
            "Зелёный",
            "Бежевый",
            "Белый",
            "Серебристо-зелёный",
            "Серебристо-тёмно серый",
            "Серебристо-серо-синий",
            "Зелёно-голубой",
            "Бежево-коричневый",
            "Красный металлик",
            "Металлик серо-бежевый",
            "Серо-фиолетовый",
            "Серо-зелёный",
            "Тёмно-красный",
            "Тёмно-серый",
            "Серебристый ярко-красный",
            "Тёмно-бордовый",
            "Тёмно-серебристо-красный",
            "Тёмно-фиолетовый",
            "Серо-голубой",
            "Голубой",
            "Тёмно-бордовый",
            "Серо-синий",
            "Серебристо-серо-коричневый",
            "Оранжево-коричневый",
            "Синий",
            "Серебристо-жёлтый",
            "Серебристо-молочно-зелёный",
            "Бело-жёлтый",
            "Серебристо-бело-молочный",
            "Серо-синий",
            "Ярко-жёлтый",
            "Зелёный",
            "Бежево-сиреневый",
            "Зелёный",
            "Тёмно-зелёный",
            "Бежево-золотистый",
            "Серебристо-жёлто-зелёный",
            "Золотисто-бежевый",
            "Золотистый тёмно-зелёный",
            "Серебристо-ярко-зелёный",
            "Тёмно-филетовый",
            "Серебристо-зелёный",
            "Тёмно-синий",
            "Фиолетовый",
            "Красный",
            "Тёмно-вишнёвый",
            "Тёмно-зелёный",
            "Ярко-красный",
            "Золотисто-красный",
            "Тёмно-сине-зелёный",
            "Светлый серо-бежевый",
            "Ярко-красный",
            "Тёмно-серый",
            "Серо-зелёный",
            "Тёмно-зелёный",
            "Золотисто-оливковый",
            "Серебристый тёмно-красный",
            "Золотисто-коричневый",
            "Коричневый",
            "Серебристый болотно-зелёный",
            "Чёрный",
            "Серебристо-вишнёвый",
            "Вишнёвый",
            "Светло-серый",
            "Серебристо-фиолетовый",
            "Серебристо-коричневый",
            "Серебристо-синий",
            "Серебристо-голубой",
            "Фиолетово-синий",
            "Серебристый тёмно-синий",
            "Синий",
            "Зелёный",
            "Белый",
            "Голубой",
            "Светло-голубой",
            "Тёмно-синий",
            "Серебристо-ярко-фиолетовый",
            "Оранжевый",
            "Серебристый тёмно-бордовый",
            "Красный металлик",
            "Голубой",
            "Желто-золотой",
            "Зелёный",
            "Серебристо-тёмно-синий",
            "Серебристо-бежево-розовый",
            "Серебристый-желто-зелёный",
            "Серебристо-серо-графитовый",
            "Серебристый стальной",
            "Ярко-синий",
            "Тёмно-зелёный",
            "Ярко-фиолетовый",
            "Сине-зелёный",
            "Мускари",
            "Серебристо-серо-золотистый",
            "Жёлтый",
            "Тёмно-зелёный",
            "Серебристо-серо-бежевый",
            "Серебристо-тёмно-серо-синий",
            "Тёмно-зелёный",
            "Серебристый-бежевый",
            "Серебристо-серо-голубоватый",
            "Сине-зелёный",
            "Серо-синий",
            "Тёмно-серо-зелёный",
            "Тёмно-синий",
            "Золотисто-зелёный",
            "Желто-зелёный",
            "Ярко-синий",
            "Серебристо-голубоватый",
            "Средне-стальной",
            "Серебристо-бежевый",
            "Зелено-голубой",
            "Серебристо-серо-зеленоватый",
            "Серебристо-красно-оранжевый",
            "Тёмно-синий",
            "Серо-зеленоватый",
            "Красно-коричневый",
            "Зелено-синий",
            "Серебристо-бежевый",
            "Серо-коричневый",
            "Тёмно-вишнёвый металлик",
            "Тёмно-синий",
            "Ярко-жёлтый",
            "Серебристо-серо-зелёный",
            "Серебристо-тёмно-синий",
            "Серебристо-бежевый",
            "Светло-жёлтый",
            "Серебристо-ярко-синий",
            "Серебристо-тёмно-синий",
            "Ярко-красный",
            "Сине-фиолетовый",
            "Серебристо-бледно-серый",
            "Тёмно-коричневый",
            "Тёмно-зелёный",
            "Тёмно-красный",
            "Красный",
            "Тёмно-голубой",
            "Салатовый",
            "Ярко-синий",
            "Бежево-красный",
            "Серебристый сине-фиолетовый",
            "Светло-бежевый",
            "Светло-серый",
            "Серебристый-зеленовато-серый",
            "Серебристый",
            "Серо-бежевый",
            "Серо-белый",
            "Серо-голубой",
            "Серо-зелёный",
            "Серый серебристый",
            "Серо-бежевый",
            "Тёмно-синий",
            "Синий",
            "Светло-фиолетовый",
            "Серо-синий",
            "Серебристо-ярко-синий",
            "Сливочно-белый",
            "Бежево-жёлтый",
            "Серебристый",
            "Снежно-белый",
            "Серебристо-серый",
            "Тёмно коричневый",
            "Серебристо-серо-зеленоватый",
            "Серебристый коричнево-зелёный",
            "Светло-серый",
            "Серый",
            "Красный",
            "Серебристо-красный",
            "Серебристо-зеленоватый",
            "Тёмно-бежевый",
            "Тёмно-коричневый",
            "Тёмно-серый	Тёмно-серый",
            "Тёмно-синий	Тёмно-синий",
            "Тёмно-синий	Оттенок тёмно-синего",
            "Сине-зелёный",
            "Оранжевый",
            "Ярко-красный",
            "Чёрный",
            "Серебристо-сиреневый",
            "Тёмно-вишнёво-малиновый",
            "Цвет морской волны",
            "Тёмно-зелёный",
            "Светло-жёлтый",
            "Серебристый тёмно-фиолетовый",
            "Тёмно-алый",
            "Чёрный, двойная эмаль",
            "Серебристо-серо-графитовый",
            "Серебристо-коричневый",
            "Тёмно-коричневый",
            "Тёмно-серый",
            "Серо-бежевый",
            "Серебристо-голубоватый",
            "Тёмно-вишнёвый"
    };
    private final String SYMBOLS[] = {"А", "В", "Е", "І", "К", "М", "Н", "О", "Р", "С", "Т", "Х"};
    private final Random random = new Random();
    private final Car[] cars;

    public Cars(int count) {
        cars = generateRandomCarsList(count);
    }

    public Car[] getCars() {
        return cars;
    }

    private Car[] generateRandomCarsList(int length) {
        Car[] result = new Car[length];
        for (int i = 0; i < result.length; i++) {
            String brand = generateRandomBrand();
            result[i] = new Car(i, brand, generateRandomModel(brand), generateRandomYear(), generateRandomColor(),
                    generateRandomPrice(), generateRandomLicensePlate());
        }
        return result;
    }

    private String generateRandomBrand() {
        return BRANDS[random.nextInt(BRANDS.length)];
    }

    private String generateRandomModel(String brand) {
        int index = (BRANDS[0].equals(brand)) ? 0 : 1;
        return MODELS[index][random.nextInt(MODELS[index].length)];
    }

    private int generateRandomYear() {
        return random.nextInt(22) + 2000;
    }

    private String generateRandomColor() {
        return COLORS[random.nextInt(COLORS.length)];
    }

    private String generateRandomLicensePlate() {
        return String.format("%04d", random.nextInt(10000)) + " " + SYMBOLS[random.nextInt(SYMBOLS.length)] +
                SYMBOLS[random.nextInt(SYMBOLS.length)] + "-" + (random.nextInt(7) + 1);
    }

    private double generateRandomPrice() {
        return random.nextInt(100000) + random.nextDouble();
    }

    public Car[] filterByBrand(String brand) {
        int count = 0;
        for (Car car : getCars()) {
            if (car.getBrand().equals(brand)) {
                count++;
            }
        }

        Car[] result = new Car[count];
        int index = -1;
        for (Car car : getCars()) {
            if (car.getBrand().equals(brand)) {
                index++;
                result[index] = car;
            }
        }

        return result;
    }

    public Car[] filterByBrandAndYearsOld(String brand, int yearsOld) {
        int count = 0;
        Calendar calendar = Calendar.getInstance();

        for (Car car : getCars()) {
            if (car.getBrand().equals(brand) && calendar.get(Calendar.YEAR) - car.getYear() > yearsOld) {
                count++;
            }
        }

        Car[] result = new Car[count];
        int index = -1;
        for (Car car : getCars()) {
            if (car.getBrand().equals(brand) && calendar.get(Calendar.YEAR) - car.getYear() > yearsOld) {
                index++;
                result[index] = car;
            }
        }

        return result;
    }

    public Car[] filterByYearAndPrice(int year, double price) {
        int count = 0;

        for (Car car : getCars()) {
            if (car.getYear() == year && car.getPrice() > price) {
                count++;
            }
        }

        Car[] result = new Car[count];
        int index = -1;
        for (Car car : getCars()) {
            if (car.getYear() == year && car.getPrice() > price) {
                index++;
                result[index] = car;
            }
        }

        return result;
    }
}
